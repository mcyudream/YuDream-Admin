package online.yudream.spring.init.initenums;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.ToString;
import online.yudream.spring.base.common.R;
import online.yudream.spring.entity.entity.route.Route;
import online.yudream.spring.entity.entity.route.RouteMeta;

@AllArgsConstructor
@Getter
@ToString
public enum SysRoute {
    ORGANIZATIONAL_STRUCTURE(Route.builder()
            .id("organizational_structure")
            .name("OrganizationalStructure")
            .permission("route.OrganizationalStructure")
            .meta(RouteMeta.builder()
                    .order(1)
                    .icon("lucide:building-2")
                    .title("page.organizationalStructure.title")
                    .build())
            .path("/OrganizationalStructure")
            .build()),
    DEPARTMENT(Route.builder()
            .id("department")
            .name("Department")
            .meta(RouteMeta.builder()
                    .icon("lucide:building")
                    .title("page.organizationalStructure.department.title")
                    .build())
            .path("department")
            .parentId("organizational_structure")
            .component("/organizationalStructure/department/index")
            .build()),
    ROLE(Route.builder()
            .id("role")
            .name("Role")
            .meta(RouteMeta.builder()
                    .icon("lucide:users")
                    .title("page.organizationalStructure.role.title")
                    .build())
            .path("role")
            .parentId("organizational_structure")
            .component("/organizationalStructure/role/Index")
            .build()),
    USER(Route.builder()
            .id("user")
            .name("User")
            .meta(RouteMeta.builder()
                    .icon("lucide:user")
                    .title("page.organizationalStructure.userManager.title")
                    .build())
            .path("user")
            .parentId("organizational_structure")
            .component("/organizationalStructure/user/Index")
            .build()),
    PERMISSION(Route.builder()
            .id("permission")
            .name("Permission")
            .meta(RouteMeta.builder()
                    .icon("lucide:user-lock")
                    .title("page.organizationalStructure.permission.title")
                    .build())
            .path("permission")
            .parentId("organizational_structure")
            .component("/organizationalStructure/permission/Index")
            .build()),
    CODEGEN(Route.builder()
            .id("codegen")
            .name("CodeGen")
            .path("/codegen")
            .component("/codegen/Index")
            .permission("route.dev.codegen")
            .meta(RouteMeta.builder()
                    .order(9999)
                    .icon("lucide:square-dashed-bottom-code")
                    .title("page.codegen.title")
                    .build())
            .build()),
    DASHBOARD(Route.builder()
            .id("dashboard")
            .name("Dashboard")
            .meta(RouteMeta.builder()
                    .title("page.dashboard.title")
                    .icon("lucide:layout-dashboard")
                    .order(-1)
                    .build())
            .path("/dashboard")
            .build()),
    ANALYTICS(Route.builder()
            .id("analytics")
            .name("Analytics")
            .meta(RouteMeta.builder()
                    .icon("lucide:area-chart")
                    .title("page.dashboard.analytics")
                    .affixTab(true)
                    .build()
            )
            .path("/analytics")
            .parentId("dashboard")
            .component("/dashboard/analytics/index")
            .build()),
    WORKSPACE(Route.builder()
            .id("workspace")
            .name("Workspace")
            .meta(RouteMeta.builder()
                    .icon("carbon:workspace")
                    .title("page.dashboard.workspace")
                    .build()
            )
            .path("/workspace")
            .parentId("dashboard")
            .component("/dashboard/workspace/index")
            .build()),
    CONFIG(Route.builder()
            .id("config")
            .name("Config")
            .permission("route.config")
            .meta(RouteMeta.builder()
                    .icon("lucide:bolt")
                    .title("page.config.title")
                    .build())
            .path("config")
            .order(9998)
            .build()),
    BASE_CONFIG(Route.builder()
            .id("base_config")
            .name("BaseConfig")
            .meta(RouteMeta.builder()
                    .icon("lucide:database")
                    .title("page.config.base.title")
                    .build()
            )
            .path("base")
            .parentId("config")
            .component("/config/base/Index")
            .build())
    ;

    private final Route route;
}
